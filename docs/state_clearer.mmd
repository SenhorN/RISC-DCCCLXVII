graph TD
START((START)) -.-> INSTR_FETCH(INSTR_FETCH)

INSTR_FETCH --> INSTR_DECODE{INSTR_DECODE}

INSTR_DECODE -->|"{L|S}{D|W|H|B}"| MEM_ADDRESS_COMP(MEM_ADDRESS_COMP)
INSTR_DECODE -->|"ADDI, S{R|L}"| IMM_ARITH(IMM_ARITH)
INSTR_DECODE -->|"TYPE R"| EXEC_TYPE_R(EXEC_TYPE_R)
INSTR_DECODE -->|"TYPE U"| EXEC_TYPE_U(EXEC_TYPE_U)
INSTR_DECODE -->|"B{EQ|NE|GE|LE}"| BRANCH_COMPL(BRANCH_COMPL)
INSTR_DECODE -->|"JAL"| JUMP_EXEC(JUMP_EXEC)

subgraph MEMORY
    MEM_ADDRESS_COMP -->|"L{D|W|H|BU}"| MEM_ACC_LD
    MEM_ADDRESS_COMP -->|"S{D|W|H|B}"| MEM_ACC_SD
    MEM_ACC_LD --> WAIT_READ_DATA_MEM
    WAIT_READ_DATA_MEM --> WRITE_BACK
end

subgraph ARITHMETIC
    EXEC_TYPE_R --> ARITH_COMPL
    EXEC_TYPE_U --> ARITH_COMPL
    IMM_ARITH   --> ARITH_COMPL
end

subgraph BRANCH COMPLETION
    BRANCH_COMPL --> WAIT_READ_INSTR_MEM
    JUMP_EXEC --> JUMP_COMPL
    JUMP_COMPL --> WAIT_READ_INSTR_MEM
end

WAIT_READ_INSTR_MEM -.-> f(INSTR_FETCH)
WRITE_BACK -.-> f
MEM_ACC_SD -.-> f
ARITH_COMPL -.-> f
