@startuml state

skinparam monochrome true
'line ortho, polyline
skinparam linetype ortho
skinparam shadowing false

class instr_fetch {
    + 1 IMemRead
    + 1 IrWrite
    + 1 PCWrite
    # 00 PCSource
    - 0 ALUSrcA
    # 01 ALUSrcB
    # 00 ALUOp
}

class instr_decode {
    + 1 LoadRegA
    + 1 LoadRegB
    + 1 LoadAOut
    - 0 ALUSrcA
    # 11 ALUSrcB
    # 00 ALUOp
}

class mem_comp < ld or sd > {
    + 1 LoadAOut
    + 1 ALUSrcA
    # 10 ALUSrcB
    # 00 ALUOp 
}

class mem_acc_ld < ld > {
    - 0 DMemOp
    + 1 LoadMDR
}

class mem_acc_sd < sd >{
    + 1 DMemOp
}

class write_back {
    + 1 RegWrite
    + 1 MemToReg
}

class exec_type_r < op: 51 >{
    + 1 LoadAOut
    + 1 ALUSrcA
    # 00 ALUSrcB
    .. ALUOp ..
    # f7 if f3 == 0
    # f3 if f3 != 0
}

class exec_type_i < op: 19 >{
    + 1 LoadAOut
    + 1 ALUSrcA
    # 10 ALUSrcB
    .. ALUOp ..
    # f3 if f3 != 2
}

class compl_alu {
    + 1 RegWrite
    - 0 MemToReg
}

class branch_compl < beq > {
    + 1 PCWriteCond
    # 01 PCSource
    + 1 ALUSrcA
    # 00 ALUSrcB
    # 01 ALUOp
}

instr_fetch --> instr_decode

instr_decode --> mem_comp
instr_decode --> exec_type_i
instr_decode --> exec_type_r
instr_decode --> branch_compl

mem_comp --> mem_acc_ld
mem_comp --> mem_acc_sd

mem_acc_ld --> write_back
write_back ..> instr_fetch

mem_acc_sd ..> instr_fetch

exec_type_r --> compl_alu
exec_type_i --> compl_alu

compl_alu ..> instr_fetch

branch_compl ..> instr_fetch


hide class circle

@enduml