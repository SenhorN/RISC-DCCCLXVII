graph LR
classDef dotted fill:#EEFFFF,stroke-dasharray:3;

START((START)) -.-> INSTR_FETCH(INSTR_FETCH)

INSTR_FETCH --> INSTR_DECODE{INSTR_DECODE}

INSTR_DECODE -->|"{L|S}{D|W|H|B}"| MEM_ADDRESS_COMP(MEM_ADDRESS_COMP)
INSTR_DECODE -->|"ADDI, S{R|L}"| IMM_ARITH(IMM_ARITH)
INSTR_DECODE -->|"TYPE R"| EXEC_TYPE_R(EXEC_TYPE_R)
INSTR_DECODE -->|"TYPE U"| EXEC_TYPE_U(EXEC_TYPE_U)
INSTR_DECODE -->|"B{EQ|NE|GE|LE}"| BRANCH_COMPL(BRANCH_COMPL)
INSTR_DECODE -->|"JAL[R]"| JUMP_EXEC(JUMP_EXEC)

subgraph MEMORY
    MEM_ADDRESS_COMP -->|"L{D|W|H|BU}"| MEM_ACC_LD
    MEM_ADDRESS_COMP -->|"S{D|W|H|B}"| MEM_ACC_SD
    subgraph Splice: SD
        MEM_ACC_SD -.-> sd((sd))
        MEM_ACC_SD -.-> sw((sw))
        MEM_ACC_SD -.-> sh((sh))
        MEM_ACC_SD -.-> sb((sb))
        class sd,sw,sh,sb dotted
    end
    MEM_ACC_LD --> WAIT_READ_DATA_MEM
    WAIT_READ_DATA_MEM --> WRITE_BACK
    subgraph Splice: LD
        WRITE_BACK -.-> ld((ld))
        WRITE_BACK -.-> lw((lw))
        WRITE_BACK -.-> lh((lh))
        WRITE_BACK -.-> lbu((lbu))
        class ld,lw,lh,lbu dotted
    end
end

subgraph ARITHMETIC
    subgraph ALUOp: TYPE R
        EXEC_TYPE_R -.->|ADD| add(("+"))
        EXEC_TYPE_R -.->|SUB| sub(("-"))
        EXEC_TYPE_R -.->|SLT| slt(("«"))
        EXEC_TYPE_R -.->|AND| and(("&"))
        class add,sub,slt,and dotted
    end
    add -.- ARITH_COMPL
    sub -.- ARITH_COMPL
    slt -.- ARITH_COMPL
    and -.- ARITH_COMPL

    EXEC_TYPE_U --> ARITH_COMPL

    subgraph ALUOp: IMM_ARITH
        IMM_ARITH -->|ADDI| addi(("+"))
        IMM_ARITH -->|SRLI| srli(("»"))
        IMM_ARITH -->|SRAI| srai(("»+"))
        IMM_ARITH -->|SLLI| slli(("«"))
        IMM_ARITH -->|SLTI| slti(("<"))
        class addi,srli,srai,slli,slti dotted
    end
    addi -.- ARITH_COMPL
    srli -.- ARITH_COMPL
    srai -.- ARITH_COMPL
    slli -.- ARITH_COMPL
    slti -.- ARITH_COMPL
end

subgraph BRANCH COMPLETION
    BRANCH_COMPL --> WAIT_READ_INSTR_MEM
    JUMP_EXEC -->|JAL| JUMP_COMPL_JAL
    JUMP_EXEC -->|JALR| JUMP_COMPL_JALR
    JUMP_COMPL_JAL --> WAIT_READ_INSTR_MEM
    JUMP_COMPL_JALR --> WAIT_READ_INSTR_MEM
end

WAIT_READ_INSTR_MEM -.-> f((INSTR_FETCH))
ld -.-> f
lw -.-> f
lh -.-> f
lbu -.-> f
sd -.-> f
sw -.-> f
sh -.-> f
sb -.-> f
ARITH_COMPL -.-> f
